# rtabmap_params.yaml
/**:
  ros__parameters:

    # General parameters
    #To change RTAB-Map\'s parameters, set the path of config file (*.ini) generated by the standalone app.
    cfg: ""      #default_value=''
    #Configuration path of rtabmap_viz.
    gui_cfg: ""   #default_value='~/.ros/rtabmap_gui.ini'
    #Configuration path of rviz2.
    rviz_cfg: "" #default_value=config_rviz
    #Fixed frame id of the robot (base frame), you may set "base_link" or "base_footprint" if they are published. For camera-only config, this could be "camera_link".
    frame_id: "root_link" #default_value='base_link'
    #If set, TF is used to get odometry instead of the topic.
    odom_frame_id: "odom" #default_value=''
    #Output map frame id (TF).
    map_frame_id: "map" #default_value='map'
    #Map topic name.
    map_topic: "/map" #default_value='map'
    #Publish TF between map and odomerty. Used in RtabMap-SLAM
    publish_tf_map: True #default_value='true'
    #namespace prefix
    namespace: "rtabmap"     #default_value='rtabmap'
    #Where is the map saved/loaded.
    database_path: "" #default_value='~/.ros/rtabmap.db'
    # Database and memory
    Mem/IncrementalMemory: "true"  # Set to "false" for localization mode
    #Queue size of individual topic subscribers.
    topic_queue_size': 30 #default_value='10'
    #Backward compatibility, use "sync_queue_size" instead.
    sync_queue_size: 30     #default_value='10'
    #General QoS used for sensor input data: 0=system default, 1=Reliable, 2=Best Effort.
    qos: 1            #default_value='0'
    wait_for_transform: 0.5 #default_value='0.2',            description=''),
    #Backward compatibility, use "args" instead.
    rtabmap_args: ""           #default_value=''
    #For debugging purpose, it fills prefix tag of the nodes, e.g., "xterm -e gdb -ex run --args"
    launch_prefix: ""         #default_value=''
    #Control node output (screen or log).
    output: "screen"        #default_value='screen'
    #Set an initial pose (only in localization mode). Format: "x y z roll pitch yaw" or "x y z qx qy qz qw". Default: see "RGBD/StartAtOrigin" doc'
    initial_pose: ""       #default_value=''
    #Output goal topic (can be connected to nav2).    
    output_goal_topic: "/goal_pose"  #default_value='/goal_pose'
    #Connect to nav2\'s navigate_to_pose action server instead of publishing the output goal topic.
    use_action_for_goal: False  #default_value='false'
    #e.g., "world"
    ground_truth_frame_id: ""       #default_value=''
    #e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree)
    ground_truth_base_frame_id: ""  #default_value=''
    # Time synchronization
    use_sim_time: True  # Set to true if using simulation
    approx_sync: True
    approx_sync_max_interval: 0.0  #default_value='0.0'(sec) 0 means infinite interval duration (used with approx_sync=true)'),

    # RGB-D related topics

    #Camera image topic
    subscribe_rgb: False                                   #default_value= True
    #rgb_topic: "/camera/rgb/image_rect_color"             #default_value='/camera/rgb/image_rect_color'
    #Camera depth image topic
    #depth_topic: "/camera/depth_registered/image_raw"     #default_value='/camera/depth_registered/image_raw'
    #Camera info topic
    #camera_info_topic: "/camera/rgb/camera_info"          #default_value='/camera/rgb/camera_info'
 
    # Stereo related topics
    
    #Stere prefix
    #stereo_namespace: "/stereo_camera"                          #default_value='/stereo_camera'
    #left_image_topic: "/stereo_camera/left/image_rect_color"    #default_value=[LaunchConfiguration('stereo_namespace'), '/left/image_rect_color']
    #Use grayscale image for efficiency.
    #right_image_topic: "/stereo_camera/right/image_rect"        #default_value=[LaunchConfiguration('stereo_namespace'), '/right/image_rect']Use grayscale image for efficiency'),
    #left_camera_info_topic: "/stereo_camera/left/camera_info"   #default_value=[LaunchConfiguration('stereo_namespace'), '/left/camera_info']
    #right_camera_info_topic: "/stereo_camera/right/camera_info" #default_value=[LaunchConfiguration('stereo_namespace'), '/right/camera_info']
        

    # Use Pre-sync RGBDImage format
    
    #Pre-sync rgb_topic, depth_topic, camera_info_topic.
    rgbd_sync: true        #default_value='false'
    # false=exact synchronization.
    approx_rgbd_sync: true  #default_value='true' 
    #Already synchronized RGB-D related topic, e.g., with rtabmap_sync/rgbd_sync nodelet.
    subscribe_rgbd: true    #default_value=LaunchConfiguration('rgbd_sync')
    #rgbd_topic: "/rgbd_image"  #default_value='rgbd_image'
    depth_scale: 1.0         #default_value='1.0'
        
    # Image topic compression

    #If you want to subscribe to compressed image topics
    compressed: False                       #default_value='false'
    #Common types: compressed, theora (see "rosrun image_transport list_transports")'),
    rgb_image_transport: "raw"         #default_value='compressed'
    #Depth compatible types: compressedDepth (see "rosrun image_transport list_transports")
    depth_image_transport: "raw"  #default_value='compressedDepth
       
    # LiDAR
    
    #Recieve Lidar data
    subscribe_scan: true           #default_value='false'
    #Laserscan topic
    scan_topic: "/scan"               #default_value='/scan'
    #I guess recieve LIDAR msg/pointcloud
    subscribe_scan_cloud: False     #default_value='false'
    #LIDAR pointcloud topic 
    scan_cloud_topic: "/velodyne_points"   #default_value='/scan_cloud'
    #No idea
    scan_normal_k: 0                #default_value='0'                  
        
    # Odometry
    
    #Launch rtabmap visual odometry node.
    visual_odometry: True           #default_value='true'
    #Launch rtabmap icp odometry node.
    icp_odometry: False             #default_value='false'
    #Odometry topic name.
    odom_topic: "odom"              #default_value='odom'
    #Visual/Icp odometry frame ID for TF.
    vo_frame_id: "odom"              #default_value=LaunchConfiguration('odom_topic')
    #Publish TF between visual odometry (vo) and odometry. Used in RtabMap-Odom
    publish_tf_odom: false #default_value='true'
    #If TF is used to get odometry, this is the default angular variance.
    odom_tf_angular_variance: 0.001  #default_value='0.01'
    #If TF is used to get odometry, this is the default linear variance.
    odom_tf_linear_variance: 0.0001  #default_value='0.001'
    #More arguments for odometry (overwrite same parameters in rtabmap_args). 
    odom_args: ""                     #default_value=''
    #Sync odometry data from different sensors
    odom_sensor_sync: False         #default_value='false'
    #In champ set as odom
    odom_guess_frame_id: "odom"          #default_value=''
    #Tolearnce for odom frame imho
    odom_guess_min_translation: 0.001 #default_value='0.0' 
    #Same
    odom_guess_min_rotation: 0.0001    #default_value='0.0'
        
    # IMU
    
    #Used with VIO approaches and for SLAM graph optimization (gravity constraints).
    #imu_topic: "/imu/data"            #default_value='/imu/data'
    #Delay for imu to start
    wait_imu_to_init: False         #default_value='false'
    #The odometry node will always check if TF between IMU frame and base frame has changed. If false, it is checked till a valid transform is initialized.
    always_check_imu_tf: True      #default_value='true'

    # User Data
    #User data synchronized subscription.
    subscribe_user_data: False                #default_value='false' 
    user_data_topic: "/user_data"               #default_value='/user_data'
    #User data async subscription (rate should be lower than map update rate).
    user_data_async_topic: "/user_data_async"   #default_value='/user_data_async'

        
    #GPS

    #GPS async subscription. This is used for SLAM graph optimization and loop closure candidates selection.
    #gps_topic: "/gps/fix"       #default_value='/gps/fix'


    # Tag/Landmark
    
    #AprilTag topic async subscription. This is used for SLAM graph optimization and loop closure detection. 
    #Landmark poses are also published accordingly to current optimized map. 
    #Required: Remove optional frame name parameters from apriltag\'s cfg file so that TF frame can be deducted from topic\'s family and id.
    #tag_topic: "/detections"                    #default_value='/detections' 
    tag_linear_variance: 0.0001               #default_value='0.0001'
    #>=9999 means rotation is ignored in optimization, when rotation estimation of the tag is not reliable or not computed.
    tag_angular_variance: 9999.0              #default_value='9999.0'
    # aruco_detect async subscription, use tag_linear_variance and tag_angular_variance to set covariance.
    #fiducial_topic: "/fiducial_transforms"      #default_value='/fiducial_transforms'

    
    # Subscription settings
    subscribe_depth: False
    subscribe_odom: True
    subscribe_odom_info: True
    
    # RTAB-Map specific parameters (must be strings)
    'RGBD/NeighborLinkRefining': "true"    # Do odometry correction with consecutive laser scans
    'RGBD/ProximityBySpace':     "true"    # Local loop closure detection (using estimated position) with locations in WM
    'RGBD/ProximityByTime':      "false"   # Local loop closure detection with locations in STM
    'RGBD/ProximityPathMaxNeighbors': "10" # Do also proximity detection by space by merging close scans together.
    'Reg/Strategy':              "0"       # 0=Visual, 1=ICP, 2=Visual+ICP
    'Vis/MinInliers':            "12"      # 3D visual words minimum inliers to accept loop closure
    'RGBD/OptimizeFromGraphEnd': "false"   # Optimize graph from initial node so /map -> /odom transform will be generated
    'RGBD/OptimizeMaxError':     "4"       # Reject any loop closure causing large errors (>3x link's covariance) in the map
    'Reg/Force3DoF':             "true"    # 2D SLAM
    'Grid/FromDepth':            "false"   # Create 2D occupancy grid from laser scan
    'Mem/STMSize':               "30"      # increased to 30 to avoid adding too many loop closures on just seen locations
    'RGBD/LocalRadius':          "5"      # limit length of proximity detections
    'Icp/CorrespondenceRatio':   "0.2"     # minimum scan overlap to accept loop closure
    'Icp/PM':                    "false"
    'Icp/PointToPlane':          "false"
    'Icp/MaxCorrespondenceDistance': "0.15"
    'Icp/VoxelSize':             "0.05"
    
    # Quality of Service
    qos_image: 1       # 0=system default, 1=Reliable, 2=Best Effort
    qos_scan: 2
    qos_odom: 1
    qos_camera_info: 1
    qos_imu: 1